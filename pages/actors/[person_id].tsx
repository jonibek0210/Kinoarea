/* eslint-disable @next/next/no-img-element */
import { useState } from 'react';
import Head from 'next/head'
import { GetServerSideProps } from "next"

import Layout from "@/layout/Layout"
import RecMovies from '@/components/RecMovies';
import ActorReview from '@/components/ActorReview';

import InputLabel from '@mui/material/InputLabel';
import MenuItem from '@mui/material/MenuItem';
import FormControl from '@mui/material/FormControl';
import Select, { SelectChangeEvent } from '@mui/material/Select';
import { IActorPageProps } from '@/types/dynamicpages/actor';

export const getServerSideProps: GetServerSideProps = async ({ query }) => {
	const key = "1bb078d910403b47ba1478583d67aa0b"
	const person_id = query.id

	const detail = await fetch(`https://api.themoviedb.org/3/person/${person_id}?api_key=${key}&language=en-US`)
	const details = await detail.json()

	const image = await fetch(`https://api.themoviedb.org/3/person/${person_id}/images?api_key=${key}`)
	const images = await image.json()

	const external_ids = await fetch(`https://api.themoviedb.org/3/person/${person_id}/external_ids?api_key=${key}&language=en-US`)
	const external = await external_ids.json()

	const combinedCredits = await fetch(`https://api.themoviedb.org/3/person/${person_id}/combined_credits?api_key=${key}&language=en-US`)
	const combined_credits = await combinedCredits.json()

	const person_translations = await fetch(`https://api.themoviedb.org/3/person/${person_id}/translations?api_key=${key}&language=en-US`)
	const translations = await person_translations.json()

	return {
		props: {
			details: details,
			images: images.profiles,
			external: external,
			combined_credits: combined_credits,
			translations: translations.translations,
		}
	}
}

const Person: React.FC<IActorPageProps> = ({ details, images, external, combined_credits, translations }) => {
	const [age, setAge] = useState<any>(0);
	const handleChange = (event: SelectChangeEvent) => {
		setAge(+event.target.value);
	};

	const info: string = translations[age].data.biography

	return (
		<>
			<Head>
				<title>Netflix | {details?.name}</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<Layout>
				<section>
					<ActorReview details={details} external={external} />
				</section>
				<section className="mt-16 max-xl:mt-11 max-lg:mt-8 max-md:mt-6 max-sm:mt-3">
					<div className="mb-2 ml-8">
						<FormControl sx={{ m: 1, minWidth: 200, }} >
							<InputLabel className='text-lg bg-[#1e2538] pr-2' id="demo-select-small">Translations</InputLabel>
							<Select
								labelId="demo-select-small"
								id="demo-select-small"
								value={age}
								label="translations"
								onChange={handleChange}
							>
								{
									translations.map((item: { name: string }, idx: number) => {
										return <MenuItem key={idx} value={idx}>{item.name}</MenuItem>
									})
								}
							</Select>
						</FormControl>
					</div>
					<div className="">
						<p className='text-xl max-lg:text-lg max-md:text-base || indent-10 max-xl:indent-7 max-lg:indent-5 max-md:indent-3 || leading-10 max-xl:leading-8 max-md:leading-6 || text-white'>{info || `translation does not exist "${translations[age].name}"`}</p>
					</div>
				</section>
				<section>
					<RecMovies movies={combined_credits.cast} description='Films with the participation of the actor' />
				</section>
				<section className="mt-20 max-xl:mt-14 max-lg:mt-10 max-md:mt-5">
					<div className="">
						<h2 className='text-6xl max-lg:text-4xl max-sm:text-3xl || font-black max-lg:font-bold text-white'>Фото</h2>
						<p className='text-2xl font-bold text-white mt-5 max-lg:mt-4 max-md:mt-3 max-sm:mt-2'>{details?.name}</p>
					</div>
					<div className="grid grid-cols-5 max-xl:grid-cols-4	max-lg:grid-cols-3 max-md:grid-cols-2 gap-5 mt-8">
						{
							images.map((img: { file_path: string | null, vote_average: number }, idx: number) => {
								return (
									<div key={idx} className="" >
										<div className="rounded-lg overflow-hidden">
											<img src={`https://image.tmdb.org/t/p/w500${img?.file_path}`} alt="" />
										</div>
										<div className="">
											<p className='max-sm:text-sm text-gray-300'>vote average: <span className='font-medium text-white'>{img.vote_average.toFixed(1)}</span></p>
										</div>
									</div>
								)
							})
						}
					</div>
				</section>
			</Layout >
		</>
	)
}

export default Person