/* eslint-disable @next/next/no-img-element */
import { GetServerSideProps } from 'next/types';
import Head from 'next/head';

import Overview from '@/components/Overview';
import RecMovies from '@/components/RecMovies';
import Seasons from '@/components/Seasons';
import Starring from '@/components/Starring';
import Trailer from '@/components/Trailer';
import Companies from '@/components/Ð¡ompanies';
import Layout from '@/layout/Layout';

const key = "1bb078d910403b47ba1478583d67aa0b"
let url = 'https://api.themoviedb.org/3/tv/'

export const getServerSideProps: GetServerSideProps = async ({ query }) => {
	const tv_id = query.id

	const details = await fetch(`${url}${tv_id}?api_key=${key}&language=en-US`)
	const data = await details.json()

	const aggregate_credits = await fetch(`${url}${tv_id}/aggregate_credits?api_key=${key}&language=en-US`)
	const actors = await aggregate_credits.json()

	const TV_watch = await fetch(`${url}${tv_id}/watch/providers?api_key=${key}`)
	const watch = await TV_watch.json()

	const external_ids = await fetch(`${url}${tv_id}/external_ids?api_key=${key}&language=en-US`)
	const external = await external_ids.json()

	const tv_recommendations = await fetch(`${url}${tv_id}/recommendations?api_key=${key}&language=en-US&page=1`)
	const recommendations = await tv_recommendations.json()

	const TV_similar = await fetch(`${url}${tv_id}/similar?api_key=${key}&language=en-US&page=1`)
	const similar = await TV_similar.json()

	const TV_videos = await fetch(`${url}${tv_id}/videos?api_key=${key}&language=en-US`)
	const videos = await TV_videos.json()

	const TV_content_ratings = await fetch(`${url}${tv_id}/content_ratings?api_key=${key}&language=en-US`)
	const content_ratings = await TV_content_ratings.json()

	const TV_screened_theatrically = await fetch(`${url}${tv_id}/screened_theatrically?api_key=${key}`)
	const screened_theatrically = await TV_screened_theatrically.json()

	// const season_number = data.seasons.map((season: any) => season.season_number)
	// const TV_season = await fetch(`https://api.themoviedb.org/3/tv/${tv_id}/season/${season_number}?api_key=${key}&language=en-US`)
	// const seasons = await TV_season.json()

	// const  = await fetch(``)
	// const  = await .json()

	// const  = await fetch(``)
	// const  = await .json()

	return {
		props: {
			details: data,
			actors: actors,
			watch: watch,
			external: external,
			recommendations: recommendations.results,
			similar: similar.results,
			videos: videos,
			content_ratings: content_ratings.results,
			screened_theatrically: screened_theatrically,
			tv_id: tv_id
		}
	}
}

interface ISeriesProps {
	actors: any
	details: any
	watch: any
	external: any
	recommendations: any
	similar: any
	videos: any
	content_ratings: any
	screened_theatrically: any
	tv_id: any
}

const Series: React.FC<ISeriesProps> = ({ tv_id, actors, details, watch, external, recommendations, similar, videos, content_ratings, screened_theatrically }) => {

	return (
		<>
			<Head>
				<title>Netflix | {details?.name}</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<Layout>
				<div className="absolute top-0 left-0 z-[-1] opacity-60">
					<img className="w-screen h-screen object-cover " src={`https://www.themoviedb.org/t/p/w1920_and_h800_multi_faces/${details?.backdrop_path}`} alt="" />
					<div className="absolute left-0 bottom-0 w-full h-full bg-gradient-to-t from-[#1e2538] to-transparent"></div>
				</div>
				<section>
					<Overview details={details} external={external} />
				</section>
				<section>
					<Companies details={details} />
				</section>
				<section>
					<Seasons details={details} tv_id={tv_id} />
				</section>
				<section>
					<Starring actors={actors} />
				</section>
				<section>
					<RecMovies movies={recommendations} description={'Recommended films'} />
				</section>
				<section>
					<Trailer videos={videos} />
				</section>
				<section>
					<RecMovies movies={similar} description={'Sequels and Prequels'} />
				</section>
			</Layout>
		</>
	)
};

export default Series;