/* eslint-disable @next/next/no-img-element */

import { useState, useEffect } from 'react';
import Image from 'next/image';
import Layout from '@/layout/Layout';
import Movie from '@/components/children/Movie';

import { IMoviesPageProps } from '@/types/pages/moviespage';

import { RxHamburgerMenu } from "react-icons/rx"
import { IoMdClose } from "react-icons/io";
import Head from 'next/head';

export const getStaticProps = async () => {
	const key = "1bb078d910403b47ba1478583d67aa0b"

	const res = await fetch(`https://api.themoviedb.org/3/movie/upcoming?api_key=${key}&language=en-US&page=1`)
	const movies = await res.json()

	const response = await fetch(`https://api.themoviedb.org/3/movie/popular?api_key=${key}&language=en-US&page=1`)
	const popular = await response.json()

	const now_playing = await fetch(`https://api.themoviedb.org/3/movie/now_playing?api_key=${key}&language=en-US&page=1`)
	const nowPlaying = await now_playing.json()

	const top_rated = await fetch(`https://api.themoviedb.org/3/movie/top_rated?api_key=${key}&language=en-US&page=1`)
	const topRated = await top_rated.json()

	return {
		props: {
			movies: movies.results,
			popular: popular.results,
			nowPlaying: nowPlaying.results,
			topRated: topRated.results
		}
	}
}

const Movies: React.FC<IMoviesPageProps> = ({ movies, popular, nowPlaying, topRated }) => {
	const [imgSrc, setImgSrc] = useState('')
	const random = Math.floor(Math.random() * 20);
	const [burger, setBurger] = useState(false)
	let pk = "w-3/5 max-xl:w-4/5 max-lg:w-full max-md:h-screen || max-xl:mt-5 max-md:mt-0 || max-md:fixed max-md:-top-full max-md:bg-black/30 ease-out duration-300"
	let mb = "w-3/5 max-xl:w-4/5 max-lg:w-full max-md:h-screen || max-xl:mt-5 max-md:mt-0 || z-50 max-md:fixed max-md:top-0 max-md:left-0 max-md:backdrop-blur-sm max-md:bg-black/30 ease-out duration-300"

	useEffect(() => {
		if (typeof window !== undefined) {
			setImgSrc(`https://www.themoviedb.org/t/p/w1920_and_h800_multi_faces${movies[random]?.backdrop_path}`)
		}
	}, [movies, random])

	return (
		<Layout>
			<Head>
				<title>Netflix | Movies</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<div className="absolute top-0 left-0 z-[-1] opacity-30">
				<img className="w-screen h-screen object-cover ease-in duration-100" src={imgSrc} alt="movie" />
				<div className="absolute left-0 bottom-0 w-full h-full bg-gradient-to-t from-[#1e2538] to-transparent"></div>
			</div>
			<section>
				<div className="">
					<div className="flex max-xl:flex-col justify-between items-center max-xl:items-start">
						<div className="max-md:w-full flex items-center max-md:justify-center max-md:gap-5">
							<h1 className='text-6xl max-xl:text-5xl max-md:text-3xl || font-black text-white'>Сейчас в кино</h1>
							<button onClick={() => setBurger(true)} className='hidden max-md:block'><RxHamburgerMenu size={25} color='#ffffff' /></button>
						</div>
						<div className={!burger ? pk : mb}>
							<div className="hidden max-md:flex max-md:justify-center max-md:my-5">
								<Image src="/images/logo.svg" alt="logo" width="130" height="30" />
								<button onClick={() => setBurger(false)} className="absolute right-5 top-5"><IoMdClose size={30} color="#ffffff" /></button>
							</div>
							<ul className='flex max-md:flex-col justify-between max-md:justify-center max-md:items-center max-md:gap-5'>
								<li className='text-lg max-md:text-sm font-bold text-[#ffffff90] hover:text-white ease-in duration-75 cursor-pointer'>Все</li>
								<li className='text-lg max-md:text-sm font-bold text-[#ffffff90] hover:text-white ease-in duration-75 cursor-pointer'>Боевики</li>
								<li className='text-lg max-md:text-sm font-bold text-[#ffffff90] hover:text-white ease-in duration-75 cursor-pointer'>Приключения</li>
								<li className='text-lg max-md:text-sm font-bold text-[#ffffff90] hover:text-white ease-in duration-75 cursor-pointer'>Комедии</li>
								<li className='text-lg max-md:text-sm font-bold text-[#ffffff90] hover:text-white ease-in duration-75 cursor-pointer'>Фантастика</li>
								<li className='text-lg max-md:text-sm font-bold text-[#ffffff90] hover:text-white ease-in duration-75 cursor-pointer'>Триллеры</li>
								<li className='text-lg max-md:text-sm font-bold text-[#ffffff90] hover:text-white ease-in duration-75 cursor-pointer'>Драма</li>
							</ul>
						</div>
					</div>
					<div className="grid grid-cols-4 max-lg:grid-cols-3 max-md:grid-cols-2 || gap-5 max-md:gap-x-2 max-md:gap-y-4 || pt-12 max-lg:pt-7 max-md:pt-5 max-sm:pt-4">
						{
							movies.map((item: {
								id: number;
								title: string;
								name: string;
								vote_average: number;
								poster_path: string | null;
								first_air_date: string;
								release_date: string;
							}) =>
								<Movie key={item.id} item={item} />
							)
						}
					</div>
				</div>
			</section>
			<section>
				<div className='mt-32 max-xl:mt-24 max-lg:mt-16 max-md:mt-10 max-sm:mt-8'>
					<div className="flex max-xl:flex-col justify-between items-center max-xl:items-start">
						<div className="max-md:w-full flex items-center max-md:justify-center max-md:gap-5">
							<h1 className='text-4xl max-xl:text-3xl max-md:text-xl || font-black text-white'>Популярные фильмы</h1>
						</div>
					</div>
					<div className="grid grid-cols-4 max-lg:grid-cols-3 max-md:grid-cols-2 || gap-5 max-md:gap-x-2 max-md:gap-y-4 || pt-12 max-lg:pt-7 max-md:pt-5 max-sm:pt-4">
						{
							popular.map((item: {
								id: number;
								title: string;
								name: string;
								vote_average: number;
								poster_path: string | null;
								first_air_date: string;
								release_date: string;
							}) =>
								<Movie key={item.id} item={item} />
							)
						}
					</div>
				</div>
			</section>
			<section>
				<div className='mt-32 max-xl:mt-24 max-lg:mt-16 max-md:mt-10 max-sm:mt-8'>
					<div className="flex max-xl:flex-col justify-between items-center max-xl:items-start">
						<div className="max-md:w-full flex items-center max-md:justify-center max-md:gap-5">
							<h1 className='text-4xl max-xl:text-3xl max-md:text-xl || font-black text-white'>сейчас играет</h1>
						</div>
					</div>
					<div className="grid grid-cols-4 max-lg:grid-cols-3 max-md:grid-cols-2 || gap-5 max-md:gap-x-2 max-md:gap-y-4 || pt-12 max-lg:pt-7 max-md:pt-5 max-sm:pt-4">
						{
							nowPlaying.map((item: {
								id: number;
								title: string;
								name: string;
								vote_average: number;
								poster_path: string | null;
								first_air_date: string;
								release_date: string;
							}) =>
								<Movie key={item.id} item={item} />
							)
						}
					</div>
				</div>
			</section>
			<section>
				<div className='mt-32 max-xl:mt-24 max-lg:mt-16 max-md:mt-10 max-sm:mt-8'>
					<div className="flex max-xl:flex-col justify-between items-center max-xl:items-start">
						<div className="max-md:w-full flex items-center max-md:justify-center max-md:gap-5">
							<h1 className='text-4xl max-xl:text-3xl max-md:text-xl || font-black text-white'>Самые популярные</h1>
						</div>
					</div>
					<div className="grid grid-cols-4 max-lg:grid-cols-3 max-md:grid-cols-2 || gap-5 max-md:gap-x-2 max-md:gap-y-4 || pt-12 max-lg:pt-7 max-md:pt-5 max-sm:pt-4">
						{
							topRated.map((item: {
								id: number;
								title: string;
								name: string;
								vote_average: number;
								poster_path: string | null;
								first_air_date: string;
								release_date: string;
							}) =>
								<Movie key={item.id} item={item} />
							)
						}
					</div>
				</div>
			</section>
		</Layout>
	)
};

export default Movies;